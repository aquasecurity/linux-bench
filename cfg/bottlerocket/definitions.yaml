---
controls:
version: bottlerocket
id: 1
description: "Initial Setup"
type: "master"
groups:
  - id: 1.1
    description: "Filesystem Configuration"
    checks:
      - id: 1.1.1.1a
        description: "Ensure mounting of udf filesystems is disabled (Automated)"
        audit: "sheltie modprobe -n -v cramfs"
        tests:
          test_items:
            - flag: "install /bin/true"
        remediation: |
          Run the following command to disable the udf module:
           # apiclient set kernel.modules.udf.allowed=false

          Run the following command to unload the udf module:
            # rmmod udf
        scored: true
      - id: 1.1.1.1b
        description: "Ensure mounting of udf filesystems is disabled (Automated)"
        audit: "sheltie grep -Fw udf /proc/modules"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: ""
        remediation: |
          Run the following command to disable the udf module:
           # apiclient set kernel.modules.udf.allowed=false

          Run the following command to unload the udf module:
            # rmmod udf
        scored: true

  - id: 1.2
    description: "Configure Software Updates (Manual)"
    checks:
      - id: 1.2.1
        description: "Ensure package manager repositories are configured"
        audit: "apiclient update check"
        tests:
          test_items:
            - flag: ""
              compare:
                op: noteq
                value: ""
        remediation: |
          Configure your package manager repositories according to site policy.
        scored: true

  - id: 1.3
    description: "Filesystem Integrity Checking"
    checks:
      - id: 1.3.1
        description: "Ensure dm-verity is configured (Automated)"
        audit: 'sheltie grep -Fw "dm-mod.create=root,,,ro,0" /proc/cmdline && grep -Fw "root=/dev/dm-0" /proc/cmdline && grep -Fw "restart_on_corruption" /proc/cmdline'
        tests:
          test_items:
            - flag: ""
              compare:
                op: has
                value: "dm-mod.create=root,,,ro,0"
            - flag: ""
              compare:
                op: has
                value: "root=/dev/dm-0"
            - flag: ""
              compare:
                op: has
                value: "restart_on_corruption"
        remediation: |
          Replace the system or reinstall the distribution.
        scored: true


  - id: 1.4
    description: ""
    checks:
      - id: 1.4.1
        description: "Additional Process Hardening"
        audit: "sheltie sysctl fs.suid_dumpable"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: "fs.suid_dumpable = 0"
        remediation: |
          Run the following command to set the active kernel parameter and persist the setting:

            # apiclient apply <<EOF
            [settings.kernel.sysctl]
            "fs.suid_dumpable" = "0"
            EOF
        scored: true

      - id: 1.4.2
        description: "Ensure address space layout randomization (ASLR) is enabled (Automated)"
        audit: "sheltie sysctl kernel.randomize_va_space"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: "kernel.randomize_va_space = 2"
        remediation: |
          Run the following command to set the active kernel parameter and persist the setting:

            # apiclient apply <<EOF
            [settings.kernel.sysctl]
            "kernel.randomize_va_space" = "2"
            EOF
        scored: true

      - id: 1.4.3
        description: "Ensure unprivileged eBPF is disabled (Automated)"
        audit: "sheltie sysctl kernel.unprivileged_bpf_disabled"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: "kernel.unprivileged_bpf_disabled = 1"
        remediation: |
          Run the following command to set the active kernel parameter and persist the setting:

            # apiclient apply <<EOF
            [settings.kernel.sysctl]
            "kernel.unprivileged_bpf_disabled" = "1"
            EOF
        scored: true

      - id: 1.4.4
        description: "Ensure user namespaces are disabled (Automated)"
        audit: "sheltie sysctl user.max_user_namespaces"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: "user.max_user_namespaces = 0"
        remediation: |
          Run the following command to set the active kernel parameter and persist the setting:

            # apiclient apply <<EOF
            [settings.kernel.sysctl]
            "user.max_user_namespaces" = "0"
            EOF
        scored: true


  - id: 1.5
    description: "Mandatory Access Control"
    checks:
      - id: 1.5.1
        description: "Ensure SELinux is configured (Automated)"
        audit: "sheltie sestatus"
        tests:
          test_items:
            - flag: ""
              compare:
                op: regex
                value: 'SELinux status:\s+enabled'
            - flag: ""
              compare:
                op: regex
                value: 'Current mode:\s+enforcing'
            - flag: ""
              compare:
                op: regex
                value: 'Mode from config file:\s+enforcing'
            - flag: ""
              compare:
                op: regex
                value: 'Loaded policy name:\s+fortified'
        remediation: |
          Replace the system or reinstall the distribution.
        scored: true

      - id: 1.5.2
        description: "Ensure Lockdown is configured (Automated)"
        audit: "sheltie grep -Fw '[integrity]' /sys/kernel/security/lockdown"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: "none [integrity] confidentiality"
        remediation: |
          Replace the system or reinstall the distribution.
        scored: true

      - id: 1.6
        description: "Ensure updates, patches, and additional security software are installed (Manual)"
        audit: "sheltie apiclient update check"
        tests:
          test_items:
            - compare:
                op: nothave
                value: "not found"
        remediation: |
          Update the software on the system according to site policy.
          This command will apply the latest available update and reboot the system to apply it if
          necessary:

            # apiclient update apply --check --reboot
        scored: true


  - id: 2.1.1
    description: "Time Synchronization"
    checks:
      - id: 2.1.1.1a
        description: "Ensure chrony is configured (Automated)"
        audit: 'apiclient get settings.ntp.time-servers'
        tests:
          test_items:
            - flag: ""
              path: '{.settings.ntp.time-servers[0]}'
              compare:
                op: noteq
                value: ""
        remediation: |
          Configure additional time servers as needed.
          The following command would add "2.pool.ntp.org" to the list of time servers.

          # apiclient apply <<EOF
          [settings.ntp]
          time-servers = [ "2.pool.ntp.org" ]
          EOF

          If chrony is not running, update to a version of the OS with the correct service
          configuration.
        scored: true

      - id: 2.1.1.1b
        description: "Ensure chrony is configured (Automated)"
        audit: 'sheltie systemctl is-active chronyd'
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: "active"
        remediation: |
          Configure additional time servers as needed.
          The following command would add "2.pool.ntp.org" to the list of time servers.

          # apiclient apply <<EOF
          [settings.ntp]
          time-servers = [ "2.pool.ntp.org" ]
          EOF

          If chrony is not running, update to a version of the OS with the correct service
          configuration.
        scored: true


  - id: 3.1
    description: "Network Parameters (Host Only)"
    checks:
      - id: 3.1.1
        description: "Ensure packet redirect sending is disabled (Automated)"
        audit: "sheltie sysctl net.ipv4.conf.all.send_redirects && sheltie sysctl net.ipv4.conf.default.send_redirects"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: "net.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.send_redirects = 0"
        remediation: |
          Run the following command to set the active kernel parameters and persist the settings:
          
            # apiclient apply <<EOF
            [settings.kernel.sysctl]
            "net.ipv4.conf.all.send_redirects" = "0"
            "net.ipv4.conf.default.send_redirects" = "0"
            EOF

          Run the following command to flush the routing cache:

            # sysctl -w net.ipv4.route.flush=1
        scored: true

  - id: 3.2
    description: "Network Parameters (Host and Router)"
    checks:
      - id: 3.2.1
        description: "Ensure source routed packets are not accepted (Automated)"
        audit: "sheltie sysctl net.ipv4.conf.all.accept_source_route && sheltie sysctl net.ipv4.conf.default.accept_source_route && sheltie sysctl net.ipv6.conf.all.accept_source_route && sheltie sysctl net.ipv6.conf.default.accept_source_route"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: "net.ipv4.conf.all.accept_source_route = 0\nnet.ipv4.conf.default.accept_source_route = 0\nnet.ipv6.conf.all.accept_source_route = 0\nnet.ipv6.conf.default.accept_source_route = 0"
        remediation: |
          Run the following command to set the active kernel parameters and persist the settings:

            # apiclient apply <<EOF
            [settings.kernel.sysctl]
            "net.ipv4.conf.all.accept_source_route" = "0"
            "net.ipv4.conf.default.accept_source_route" = "0"
            "net.ipv6.conf.all.accept_source_route" = "0"
            "net.ipv6.conf.default.accept_source_route" = "0"
            EOF
          
          Run the following command to flush the routing caches:
          
            # sysctl -w net.ipv4.route.flush=1
            # sysctl -w net.ipv6.route.flush=1
        scored: true


      - id: 3.2.2
        description: "Ensure ICMP redirects are not accepted (Automated)"
        audit: "sheltie sysctl net.ipv4.conf.all.accept_redirects && sheltie sysctl net.ipv4.conf.default.accept_redirects && sheltie sysctl net.ipv6.conf.all.accept_redirects && sheltie sysctl net.ipv6.conf.default.accept_redirects"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: "net.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.default.accept_redirects = 0\nnet.ipv6.conf.all.accept_redirects = 0\nnet.ipv6.conf.default.accept_redirects = 0"
        remediation: |
          Run the following command to set the active kernel parameters and persist the settings:

            # apiclient apply <<EOF
            [settings.kernel.sysctl]
            "net.ipv4.conf.all.accept_redirects" = "0"
            "net.ipv4.conf.default.accept_redirects" = "0"
            "net.ipv6.conf.all.accept_redirects" = "0"
            "net.ipv6.conf.default.accept_redirects" = "0"
            EOF
          
          Run the following command to flush the routing caches:
          
            # sysctl -w net.ipv4.route.flush=1
            # sysctl -w net.ipv6.route.flush=1
        scored: true

      - id: 3.2.3
        description: "Ensure secure ICMP redirects are not accepted (Automated)"
        audit: "sheltie sysctl net.ipv4.conf.all.secure_redirects && sheltie sysctl net.ipv4.conf.default.secure_redirects"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: "net.ipv4.conf.all.secure_redirects = 0\nnet.ipv4.conf.default.secure_redirects = 0"
        remediation: |
          Run the following command to set the active kernel parameters and persist the settings:

            # apiclient apply <<EOF
            [settings.kernel.sysctl]
            "net.ipv4.conf.all.secure_redirects" = "0"
            "net.ipv4.conf.default.secure_redirects" = "0"
            EOF
                      
          Run the following command to flush the routing cache:
          
            # sysctl -w net.ipv4.route.flush=1
        scored: true

      - id: 3.2.4
        description: "Ensure suspicious packets are logged (Automated)"
        audit: "sheltie sysctl net.ipv4.conf.all.log_martians && sheltie sysctl net.ipv4.conf.default.log_martians"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: "net.ipv4.conf.all.log_martians = 1\nnet.ipv4.conf.default.log_martians = 1"
        remediation: |
          Run the following command to set the active kernel parameters and persist the settings:

            # apiclient apply <<EOF
            [settings.kernel.sysctl]
            "net.ipv4.conf.all.log_martians" = "1"
            "net.ipv4.conf.default.log_martians" = "1"
            EOF

          Run the following command to flush the routing cache:

            # sysctl -w net.ipv4.route.flush=1
        scored: true

      - id: 3.2.5
        description: "Ensure broadcast ICMP requests are ignored (Automated)"
        audit: "sheltie sysctl net.ipv4.icmp_echo_ignore_broadcasts"
        tests:
          test_items:
            - flag: "net.ipv4.icmp_echo_ignore_broadcasts"
              compare:
                op: eq
                value: "1"
        remediation: |
          Run the following command to set the active kernel parameter and persist the setting:

            # apiclient apply <<EOF
            [settings.kernel.sysctl]
            "net.ipv4.icmp_echo_ignore_broadcasts" = "1"
            EOF
          
          Run the following command to flush the routing cache:
            # sysctl -w net.ipv4.route.flush=1
        scored: true

      - id: 3.2.6
        description: "Ensure bogus ICMP responses are ignored (Automated)"
        audit: "sheltie sysctl net.ipv4.icmp_ignore_bogus_error_responses"
        tests:
          test_items:
            - flag: "net.ipv4.icmp_ignore_bogus_error_responses"
              compare:
                op: eq
                value: "1"
        remediation: |
          Run the following command to set the active kernel parameter and persist the setting:

            # apiclient apply <<EOF
            [settings.kernel.sysctl]
            "net.ipv4.icmp_ignore_bogus_error_responses" = "1"
            EOF
          
          Run the following command to flush the routing cache:

            # sysctl -w net.ipv4.route.flush=1
        scored: true

      - id: 3.2.7
        description: "Ensure TCP SYN Cookies is enabled (Automated)"
        audit: "sheltie sysctl net.ipv4.tcp_syncookies"
        tests:
          test_items:
            - flag: "net.ipv4.tcp_syncookies"
              compare:
                op: eq
                value: "1"
        remediation: |
          Run the following command to set the active kernel parameter and persist the setting:

            # apiclient apply <<EOF
            [settings.kernel.sysctl]
            "net.ipv4.tcp_syncookies" = "1"
            EOF

          Run the following command to flush the routing cache:
            # sysctl -w net.ipv4.route.flush=1
        scored: true

  - id: 3.3
    description: "Uncommon Network Protocols"
    checks:
      - id: 3.3.1
        description: "Ensure SCTP is disabled (Automated)"
        audit: "sheltie grep -w sctp /proc/modules"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: ""
        remediation: |
          Run the following command to disable the sctp module:

            # apiclient set kernel.modules.sctp.allowed=false
        scored: true

  - id: 3.4
    description: "Firewall Configuration"
  - id: 3.4.1
    description: "Configure IPv4 iptables"
    checks:
      - id: 3.4.1.1
        description: "Ensure IPv4 default deny firewall policy (Automated)"
        audit: "sheltie iptables -L | grep -E 'Chain INPUT \(policy DROP\)|Chain FORWARD \(policy DROP\)|Chain OUTPUT \(policy DROP\)'"
        tests:
          test_items:
            - flags: ""
              compare:
                op: eq
                value: "Chain INPUT (policy DROP)\nChain FORWARD (policy DROP)\nChain OUTPUT (policy DROP)"
        remediation: |
          Run the following commands to implement a default DROP policy:

            # iptables -P INPUT DROP
            # iptables -P OUTPUT DROP
            # iptables -P FORWARD DROP
        scored: true

      - id: 3.4.1.2
        description: "Ensure IPv4 loopback traffic is configured (Automated)"
        audit: "sheltie iptables -L INPUT -v -n"
        type: manual
        remediation: |
          Run the following commands to implement the loopback rules:

            # iptables -A INPUT -i lo -j ACCEPT
            # iptables -A OUTPUT -o lo -j ACCEPT
            # iptables -A INPUT -s 127.0.0.0/8 -j DROP
        scored: true

      - id: 3.4.1.3
        description: "Ensure IPv4 outbound and established connections are configured (Manual)"
        audit: "sheltie iptables -L -v -n"
        type: manual
        remediation: |
          Configure iptables in accordance with site policy. The following commands will
          implement a policy to allow all outbound connections and all established connections:

            # iptables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
            # iptables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
            # iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
            # iptables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
            # iptables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
            # iptables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT
        scored: false

  - id: 3.4.2
    description: "Configure IPv6 ip6tables"
    checks:
      - id: 3.4.2.1
        description: "Ensure IPv6 default deny firewall policy (Automated)"
        audit: "sheltie ip6tables -L | grep -E 'Chain INPUT \(policy DROP\)|Chain FORWARD \(policy DROP\)|Chain OUTPUT \(policy DROP\)'"
        tests:
          test_items:
            - flags: ""
              compare:
                op: eq
                value: "Chain INPUT (policy DROP)\nChain FORWARD (policy DROP)\nChain OUTPUT (policy DROP)"
        remediation: |
          Run the following commands to implement a default DROP policy:

            # ip6tables -P INPUT DROP
            # ip6tables -P OUTPUT DROP
            # ip6tables -P FORWARD DROP
        scored: true

      - id: 3.4.2.2
        description: "Ensure IPv6 loopback traffic is configured (Automated)"
        audit: "sheltie ip6tables -L INPUT -v -n"
        type: manual
        remediation: |
          Run the following commands to implement the loopback rules:

            # ip6tables -A INPUT -i lo -j ACCEPT
            # ip6tables -A OUTPUT -o lo -j ACCEPT
            # ip6tables -A INPUT -s ::1 -j DROP
        scored: true

      - id: 3.4.2.3
        description: "Ensure IPv6 outbound and established connections are configured (Manual)"
        audit: "sheltie ip6tables -L -v -n"
        type: manual
        remediation: |
          Configure iptables in accordance with site policy. The following commands will
          implement a policy to allow all outbound connections and all established connections:

            # ip6tables -A OUTPUT -p tcp -m state --state NEW,ESTABLISHED -j ACCEPT
            # ip6tables -A OUTPUT -p udp -m state --state NEW,ESTABLISHED -j ACCEPT
            # ip6tables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED -j ACCEPT
            # ip6tables -A INPUT -p tcp -m state --state ESTABLISHED -j ACCEPT
            # ip6tables -A INPUT -p udp -m state --state ESTABLISHED -j ACCEPT
            # ip6tables -A INPUT -p icmp -m state --state ESTABLISHED -j ACCEPT
        scored: false

  - id: 4
    description: "Logging and Auditing"
  - id: 4.1
    description: "Configure Logging"
    checks:
  - id: 4.1.1
    description: "Configure journald"
    checks:
      - id: 4.1.1.1
        description: "Ensure journald is configured to write logs to persistent disk (Automated)"
        audit: "sheltie grep -Fw Storage /usr/lib/systemd/journald.conf.d/journald.conf"
        tests:
          test_items:
            - flag: "storage"
              compare:
                op: eq
                value: "persistent"
        remediation: |
          Update to a version of the OS with the correct journald configuration.
        scored: true

      - id: 4.1.2
        description: "Ensure permissions on journal files are configured (Automated)"
        audit: "sheltie gfind /var/log/journal -type f -perm /g+wx,o+rwx"
        tests:
          test_items:
            - flag: ""
              compare:
                op: eq
                value: ""
        remediation: |
          Run the following commands to set permissions on all existing log files:`

            # find /var/log/journal -type f -perm /g+wx,o+rwx -exec chmod g-wx,o-rwx "{}"